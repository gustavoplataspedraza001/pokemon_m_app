@model app_poke.Models.Pokemon.PokemonListViewModel

@{
    ViewData["Title"] = "Listado Pokémon";
    var currentPage = Model.CurrentPage;
    var totalPages = Model.TotalPages;
}

<div class="container py-5">
    <form method="get" asp-action="Index" class="mb-4 d-flex gap-3 align-items-center">
    <div>
        <label for="typeFilter" class="form-label">Filtrar por tipo:</label>
<select name="typeFilter" id="typeFilter" class="form-select">
    <option value="">Todos</option>
    @foreach (var type in Model.PokemonTypes)
    {
        <option value="@type" >
            @type
        </option>
    }
</select>


    </div>
    <div>
        <label for="searchName" class="form-label">Buscar por nombre:</label>
        <input type="text" name="searchName" id="searchName" class="form-control" value="@Model.SearchName" placeholder="Nombre de Pokémon" />
    </div>
    <div>
        <button type="submit" class="btn btn-primary mt-4">Filtrar</button>
    </div>
</form>

    <div class="d-flex justify-content-between mb-4">
        <h2>Pokémon</h2>
        <div>
            <button onclick="downloadExcel()" class="btn btn-success">
                <i class="bi bi-download"></i> Exportar a Excel
            </button>
            <a class="btn btn-primary" asp-action="SendEmail">
                <i class="bi bi-envelope-fill"></i> Enviar por Correo
            </a>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-hover text-center shadow rounded">
            <thead class="table-dark">
                <tr>
                    <th>#</th>
                    <th>Nombre</th>
                    <th>Imagen</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Pokemons.Count; i++)
                {
                    var p = Model.Pokemons[i];
                    <tr>
                        <td>@(((currentPage - 1) * 20) + i + 1)</td>
                        <td class="text-capitalize">@p.Name</td>
                        <td>
                            <img src="@p.ImageUrl" class="img-fluid" style="height: 80px;" alt="@p.Name" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Paginación -->
    @{
        int maxPagesToShow = 10;
        int halfRange = maxPagesToShow / 2;

        int startPage = currentPage - halfRange + 1;
        int endPage = currentPage + halfRange;

        if (startPage < 1)
        {
            startPage = 1;
            endPage = Math.Min(maxPagesToShow, totalPages);
        }
        else if (endPage > totalPages)
        {
            endPage = totalPages;
            startPage = Math.Max(1, totalPages - maxPagesToShow + 1);
        }
    }

    <nav aria-label="Paginación Pokémon" class="mt-4">
        <ul class="pagination justify-content-center">
            @if (currentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@(currentPage - 1)">&laquo;</a>
                </li>
            }

            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                </li>
            }

            @if (currentPage < totalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@(currentPage + 1)">&raquo;</a>
                </li>
            }
        </ul>
    </nav>

</div>
<script>
    function downloadExcel() {
        const link = document.createElement('a');
        link.href = '/Home/ExportExcel';
        link.download = ''; // nombre opcional, aunque el servidor lo manda
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    }
</script>
